{"ast":null,"code":"var _jsxFileName = \"/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Player from \"./player\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst buttonStyles = {\n  backgroundColor: \"black\",\n  color: \"white\",\n  padding: \"10px\",\n  margin: \"0.5rem\",\n  borderRadius: \"0.2rem\",\n  width: \"100%\",\n  boxShadow: \"none\",\n  border: \"none\",\n  cursor: \"pointer\",\n  fontSize: 16,\n  fontWeight: \"bold\",\n  letterSpacing: 0.25\n};\nfunction Game() {\n  _s();\n  const [players, setPlayers] = useState([{\n    id: 1,\n    globalScore: 0,\n    roundScore: 0\n  }, {\n    id: 2,\n    globalScore: 0,\n    roundScore: 0\n  }]);\n  const [currentPlayerIndex] = useState(0);\n  const rollDice = value => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value\n        };\n      }\n      return player;\n    });\n    setPlayers(updatedPlayers);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mon jeu de d\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n            player: player,\n            id: 2,\n            isActive: false\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game__turn\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Roll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DiceRoll, {\n              onRoll: rollDice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Game, \"XhGx0WZYqzZ0/vInpvWXm//1hic=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Player","DiceRoll","jsxDEV","_jsxDEV","Fragment","_Fragment","buttonStyles","backgroundColor","color","padding","margin","borderRadius","width","boxShadow","border","cursor","fontSize","fontWeight","letterSpacing","Game","_s","players","setPlayers","id","globalScore","roundScore","currentPlayerIndex","rollDice","value","updatedPlayers","map","player","index","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isActive","onRoll","_c","$RefreshReg$"],"sources":["/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Player from \"./player\";\nimport { PlayerData } from \"./playerData\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\n\nconst buttonStyles = {\n  backgroundColor: \"black\",\n  color: \"white\",\n  padding: \"10px\",\n  margin: \"0.5rem\",\n  borderRadius: \"0.2rem\",\n  width: \"100%\",\n  boxShadow: \"none\",\n  border: \"none\",\n  cursor: \"pointer\",\n  fontSize: 16,\n  fontWeight: \"bold\",\n  letterSpacing: 0.25,\n};\n\nfunction Game() {\n  const [players, setPlayers] = useState<PlayerData[]>([\n    { id: 1, globalScore: 0, roundScore: 0 },\n    { id: 2, globalScore: 0, roundScore: 0 },\n  ]);\n  const [currentPlayerIndex] = useState<number>(0);\n\n  const rollDice = (value: number) => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value,\n        };\n      }\n      return player;\n    });\n    setPlayers(updatedPlayers);\n  };\n\n  return (\n    <>\n      <div className=\"image\">\n        <div className=\"game-container\">\n          <h1>Mon jeu de dés</h1>\n          <div>\n            {players.map((player) => (\n              <Player key={player.id} player={player} id={2} isActive={false} />\n            ))}\n          </div>\n          <div className=\"game__turn\">\n            {/* <h2>Tour de {players[currentPlayerIndex].id}</h2> */}\n            <div className=\"player-name\">\n              <p>Roll</p>\n\n              <DiceRoll onRoll={rollDice} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}