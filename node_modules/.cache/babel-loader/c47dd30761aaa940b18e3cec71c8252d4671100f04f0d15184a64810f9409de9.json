{"ast":null,"code":"var _jsxFileName = \"/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Player from \"./player\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction newGame() {\n  _s();\n  const [players, setPlayers] = useState([{\n    id: 1,\n    globalScore: 0,\n    roundScore: 0\n  }, {\n    id: 2,\n    globalScore: 0,\n    roundScore: 0\n  }]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n}\n_s(newGame, \"Ch5kgO7EkDPL33nTXMeLUzMpyWE=\");\nfunction resetGame() {\n  return [{\n    id: 1,\n    globalScore: 0,\n    roundScore: 0\n  }, {\n    id: 2,\n    globalScore: 0,\n    roundScore: 0\n  }];\n}\nfunction Game() {\n  _s2();\n  const [players, setPlayers] = useState([{\n    id: 1,\n    globalScore: 0,\n    roundScore: 0\n  }, {\n    id: 2,\n    globalScore: 0,\n    roundScore: 0\n  }]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const rollDice = value => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value\n        };\n      }\n      return player;\n    });\n\n    // Si le joueur actuel a fait deux lancers, passer au joueur suivant\n    if (value === 1 || value === 6) {\n      const nextPlayerIndex = (currentPlayerIndex + 1) % players.length;\n      setCurrentPlayerIndex(nextPlayerIndex);\n    }\n\n    // Mettre à jour les scores globaux si le joueur a atteint 100 points\n    const currentPlayer = updatedPlayers[currentPlayerIndex];\n    if (currentPlayer.roundScore + currentPlayer.globalScore >= 100) {\n      alert(`Le joueur ${currentPlayer.id} a gagné !`);\n      setPlayers(resetGame);\n      setCurrentPlayerIndex(0);\n    } else {\n      setPlayers(updatedPlayers);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-container\",\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n            player: player,\n            id: index + 1,\n            isActive: index === currentPlayerIndex\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game__turn\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Tour de Joueur \", players[currentPlayerIndex].id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lancer le d\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DiceRoll, {\n              onRoll: rollDice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s2(Game, \"Ch5kgO7EkDPL33nTXMeLUzMpyWE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Player","DiceRoll","jsxDEV","_jsxDEV","Fragment","_Fragment","newGame","_s","players","setPlayers","id","globalScore","roundScore","currentPlayerIndex","setCurrentPlayerIndex","resetGame","Game","_s2","rollDice","value","updatedPlayers","map","player","index","nextPlayerIndex","length","currentPlayer","alert","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isActive","onRoll","_c","$RefreshReg$"],"sources":["/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Player from \"./player\";\nimport { PlayerData } from \"./playerData\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\n\nfunction newGame() {\n  const [players, setPlayers] = useState<PlayerData[]>([\n    { id: 1, globalScore: 0, roundScore: 0 },\n    { id: 2, globalScore: 0, roundScore: 0 },\n  ]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState<number>(0);\n}\n\nfunction resetGame() {\n  return [\n    { id: 1, globalScore: 0, roundScore: 0 },\n    { id: 2, globalScore: 0, roundScore: 0 },\n  ];\n}\n\nfunction Game() {\n  const [players, setPlayers] = useState<PlayerData[]>([\n    { id: 1, globalScore: 0, roundScore: 0 },\n    { id: 2, globalScore: 0, roundScore: 0 },\n  ]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState<number>(0);\n\n  const rollDice = (value: number) => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value,\n        };\n      }\n      return player;\n    });\n\n    // Si le joueur actuel a fait deux lancers, passer au joueur suivant\n    if (value === 1 || value === 6) {\n      const nextPlayerIndex = (currentPlayerIndex + 1) % players.length;\n      setCurrentPlayerIndex(nextPlayerIndex);\n    }\n\n    // Mettre à jour les scores globaux si le joueur a atteint 100 points\n    const currentPlayer = updatedPlayers[currentPlayerIndex];\n    if (currentPlayer.roundScore + currentPlayer.globalScore >= 100) {\n      alert(`Le joueur ${currentPlayer.id} a gagné !`);\n      setPlayers(resetGame);\n      setCurrentPlayerIndex(0);\n    } else {\n      setPlayers(updatedPlayers);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"image\">\n        <div className=\"game-container\">\n          <button onClick={newGame}>New Game</button>\n          <div className=\"player-info-container\">\n            {players.map((player, index) => (\n              <Player\n                key={player.id}\n                player={player}\n                id={index + 1}\n                isActive={index === currentPlayerIndex}\n              />\n            ))}\n          </div>\n          <div className=\"game__turn\">\n            <h2>Tour de Joueur {players[currentPlayerIndex].id}</h2>\n            <div className=\"player-name\">\n              <p>Lancer le dé</p>\n              <DiceRoll onRoll={rollDice} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}