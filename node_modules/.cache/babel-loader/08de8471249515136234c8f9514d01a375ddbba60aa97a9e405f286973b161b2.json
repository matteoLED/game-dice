{"ast":null,"code":"var _jsxFileName = \"/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx\";\nimport React from \"react\";\nimport \"../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  //   const [players, setPlayers] = useState<PlayerData[]>([]);\n  //   const [currentPlayerIndex] = useState<number>(0);\n\n  //   const addPlayer = (name: string) => {\n  //     const newPlayer: PlayerData = {\n  //       id: players.length + 1,\n  //       name,\n  //       globalScore: 0,\n  //       roundScore: 0,\n  //     };\n  //     setPlayers([...players, newPlayer]);\n  //   };\n\n  //   const rollDice = (value: number) => {\n  //     // Mettre à jour le score du joueur en cours\n  //     const updatedPlayers = players.map((player, index) => {\n  //       if (index === currentPlayerIndex) {\n  //         return {\n  //           ...player,\n  //           roundScore: player.roundScore + value,\n  //         };\n  //       }\n  //       return player;\n  //     });\n  //     setPlayers(updatedPlayers);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mon jeu de d\\xE9s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Game","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Player from \"./player\";\nimport { PlayerData } from \"./playerData\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\n\nfunction Game() {\n  //   const [players, setPlayers] = useState<PlayerData[]>([]);\n  //   const [currentPlayerIndex] = useState<number>(0);\n\n  //   const addPlayer = (name: string) => {\n  //     const newPlayer: PlayerData = {\n  //       id: players.length + 1,\n  //       name,\n  //       globalScore: 0,\n  //       roundScore: 0,\n  //     };\n  //     setPlayers([...players, newPlayer]);\n  //   };\n\n  //   const rollDice = (value: number) => {\n  //     // Mettre à jour le score du joueur en cours\n  //     const updatedPlayers = players.map((player, index) => {\n  //       if (index === currentPlayerIndex) {\n  //         return {\n  //           ...player,\n  //           roundScore: player.roundScore + value,\n  //         };\n  //       }\n  //       return player;\n  //     });\n  //     setPlayers(updatedPlayers);\n  //   };\n\n  return (\n    <div className=\"game\">\n      <h1>Mon jeu de dés</h1>\n      {/* <h1>Mon jeu de dés</h1>\n      <div className=\"game__players\">\n        {players.map((player) => (\n          <Player key={player.id} player={player} id={0} isActive={false} />\n        ))}\n        <button onClick={() => addPlayer(\"Joueur \" + (players.length + 1))}>\n          Ajouter un joueur\n        </button>\n      </div>\n      <div className=\"game__turn\">\n        <h2>Tour de {players[currentPlayerIndex].name}</h2>\n        <div className=\"game__roll\">\n          <p>Lancer les dés</p>\n          <DiceRoll onRoll={rollDice} />\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAIvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,IAAIA,CAAA,EAAG;EACd;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBH,OAAA;MAAAG,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiBpB,CAAC;AAEV;AAACC,EAAA,GAjDQP,IAAI;AAmDb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}