{"ast":null,"code":"var _jsxFileName = \"/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Player from \"./player\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction addPlayer() {\n  const buttonStyle = {\n    padding: \"8px\",\n    margin: \"0.5rem\",\n    borderRadius: \"0.2rem\",\n    width: \"80%\",\n    boxShadow: \"none\" // pour enlever le shadow\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => addPlayer(\"Joueur \" + (Player.length + 1)),\n    children: \"Ajouter un joueur\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\nfunction Game() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerIndex] = useState(0);\n  const addPlayer = name => {\n    const newPlayer = {\n      id: players.length + 1,\n      name,\n      globalScore: 0,\n      roundScore: 0\n    };\n    setPlayers([...players, newPlayer]);\n  };\n  const rollDice = value => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value\n        };\n      }\n      return player;\n    });\n    setPlayers(updatedPlayers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mon jeu de d\\xE9s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game__players\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n        player: player,\n        id: 0,\n        isActive: false\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game__turn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game__roll\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lancer les d\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiceRoll, {\n          onRoll: rollDice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"jOXFKo7dxQlrshAH13oK44XkC3c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Player","DiceRoll","jsxDEV","_jsxDEV","addPlayer","buttonStyle","padding","margin","borderRadius","width","boxShadow","onClick","length","children","fileName","_jsxFileName","lineNumber","columnNumber","Game","_s","players","setPlayers","currentPlayerIndex","name","newPlayer","id","globalScore","roundScore","rollDice","value","updatedPlayers","map","player","index","className","isActive","onRoll","_c","$RefreshReg$"],"sources":["/Users/mat/workspace/ProjetStudi/gamestudiprojet/src/components/game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Player from \"./player\";\nimport { PlayerData } from \"./playerData\";\nimport DiceRoll from \"./diceRoll\";\nimport \"../styles/game.css\";\n\nfunction addPlayer() {\n  const buttonStyle = {\n    padding: \"8px\",\n    margin: \"0.5rem\",\n    borderRadius: \"0.2rem\",\n    width: \"80%\",\n    boxShadow: \"none\", // pour enlever le shadow\n  };\n  return (\n    <button onClick={() => addPlayer(\"Joueur \" + (Player.length + 1))}>\n      Ajouter un joueur\n    </button>\n  );\n}\n\nfunction Game() {\n  const [players, setPlayers] = useState<PlayerData[]>([]);\n  const [currentPlayerIndex] = useState<number>(0);\n\n  const addPlayer = (name: string) => {\n    const newPlayer: PlayerData = {\n      id: players.length + 1,\n      name,\n      globalScore: 0,\n      roundScore: 0,\n    };\n    setPlayers([...players, newPlayer]);\n  };\n\n  const rollDice = (value: number) => {\n    // Mettre à jour le score du joueur en cours\n    const updatedPlayers = players.map((player, index) => {\n      if (index === currentPlayerIndex) {\n        return {\n          ...player,\n          roundScore: player.roundScore + value,\n        };\n      }\n      return player;\n    });\n    setPlayers(updatedPlayers);\n  };\n\n  return (\n    <div className=\"game\">\n      <h1>Mon jeu de dés</h1>\n      <div className=\"game__players\">\n        {players.map((player) => (\n          <Player key={player.id} player={player} id={0} isActive={false} />\n        ))}\n      </div>\n      <div className=\"game__turn\">\n        {/* <h2>Tour de {players[currentPlayerIndex].id}</h2> */}\n        <div className=\"game__roll\">\n          <p>Lancer les dés</p>\n          <DiceRoll onRoll={rollDice} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}