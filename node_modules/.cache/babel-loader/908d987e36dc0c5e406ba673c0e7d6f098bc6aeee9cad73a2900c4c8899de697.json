{"ast":null,"code":"var _jsxFileName = \"/Users/mat/workspace/Projet-Studi/game-dice/src/components/diceRoll.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FaDiceOne, FaDiceTwo, FaDiceThree, FaDiceFour, FaDiceFive, FaDiceSix } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst buttonStyles = {\n  backgroundColor: \"black\",\n  color: \"white\",\n  padding: \"10px\",\n  margin: \"0.5rem\",\n  borderRadius: \"0.2rem\",\n  width: \"92%\",\n  boxShadow: \"none\",\n  border: \"none\",\n  cursor: \"pointer\",\n  fontSize: 16,\n  fontWeight: \"bold\",\n  letterSpacing: 0.25\n};\nconst RefreshIcon = _ref => {\n  let {\n    size = 24,\n    color = \"black\"\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: color,\n      d: \"M16.59,7.58A8,8,0,1,0,20,12H18a6,6,0,1,1-3.91-5.39l-.5.86a5,5,0,1,0,8.11,5.39l2.24-2.24A1,1,0,0,0,23,8V3a1,1,0,0,0-1.71-.7l-2.24,2.24A7.93,7.93,0,0,0,16.59,7.58Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = RefreshIcon;\nconst DiceRoll = _ref2 => {\n  _s();\n  let {\n    onRoll\n  } = _ref2;\n  const [diceValue, setDiceValue] = useState(0);\n  const [rollsCount, setRollsCount] = useState(0);\n  const rollDice = () => {\n    const value = Math.floor(Math.random() * 6) + 1;\n    setDiceValue(value);\n    onRoll(value);\n\n    // Augmenter le nombre de lancers de dé effectués\n    const updatedRollsCount = rollsCount + 1;\n    setRollsCount(updatedRollsCount);\n\n    // Vérifier si le joueur a effectué deux lancers de dé\n    if (updatedRollsCount === 2) {\n      // Passer au joueur suivant (appeler une fonction de votre choix ici)\n      setRollsCount(0);\n    }\n  };\n  const renderDice = value => {\n    switch (value) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(FaDiceOne, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(FaDiceTwo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(FaDiceThree, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(FaDiceFour, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(FaDiceFive, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(FaDiceSix, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyles,\n      className: \"click\",\n      onClick: rollDice,\n      children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n        size: 16,\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \" Roll Dice\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      children: renderDice(diceValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DiceRoll, \"JeoB+ZM0fwEovuMW/D6cLlRNlfE=\");\n_c2 = DiceRoll;\nexport default DiceRoll;\nvar _c, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c2, \"DiceRoll\");","map":{"version":3,"names":["React","useState","FaDiceOne","FaDiceTwo","FaDiceThree","FaDiceFour","FaDiceFive","FaDiceSix","jsxDEV","_jsxDEV","Fragment","_Fragment","buttonStyles","backgroundColor","color","padding","margin","borderRadius","width","boxShadow","border","cursor","fontSize","fontWeight","letterSpacing","RefreshIcon","_ref","size","height","viewBox","children","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","DiceRoll","_ref2","_s","onRoll","diceValue","setDiceValue","rollsCount","setRollsCount","rollDice","value","Math","floor","random","updatedRollsCount","renderDice","style","className","onClick","_c2","$RefreshReg$"],"sources":["/Users/mat/workspace/Projet-Studi/game-dice/src/components/diceRoll.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FaDiceOne,\n  FaDiceTwo,\n  FaDiceThree,\n  FaDiceFour,\n  FaDiceFive,\n  FaDiceSix,\n} from \"react-icons/fa\";\n\nconst buttonStyles = {\n  backgroundColor: \"black\",\n  color: \"white\",\n  padding: \"10px\",\n  margin: \"0.5rem\",\n  borderRadius: \"0.2rem\",\n  width: \"92%\",\n  boxShadow: \"none\",\n  border: \"none\",\n  cursor: \"pointer\",\n  fontSize: 16,\n  fontWeight: \"bold\",\n  letterSpacing: 0.25,\n};\n\ntype RefreshIconProps = {\n  size?: number;\n  color?: string;\n};\n\nconst RefreshIcon = ({ size = 24, color = \"black\" }: RefreshIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n      <path\n        fill={color}\n        d=\"M16.59,7.58A8,8,0,1,0,20,12H18a6,6,0,1,1-3.91-5.39l-.5.86a5,5,0,1,0,8.11,5.39l2.24-2.24A1,1,0,0,0,23,8V3a1,1,0,0,0-1.71-.7l-2.24,2.24A7.93,7.93,0,0,0,16.59,7.58Z\"\n      />\n    </svg>\n  );\n};\n\ntype DiceRollProps = {\n  onRoll: (value: number) => void;\n  onNextPlayer: () => void;\n};\n\nconst DiceRoll = ({ onRoll }: DiceRollProps) => {\n  const [diceValue, setDiceValue] = useState<number>(0);\n  const [rollsCount, setRollsCount] = useState<number>(0);\n\n  const rollDice = () => {\n    const value = Math.floor(Math.random() * 6) + 1;\n    setDiceValue(value);\n    onRoll(value);\n\n    // Augmenter le nombre de lancers de dé effectués\n    const updatedRollsCount = rollsCount + 1;\n    setRollsCount(updatedRollsCount);\n\n    // Vérifier si le joueur a effectué deux lancers de dé\n    if (updatedRollsCount === 2) {\n      // Passer au joueur suivant (appeler une fonction de votre choix ici)\n      setRollsCount(0);\n    }\n  };\n\n  const renderDice = (value: number) => {\n    switch (value) {\n      case 1:\n        return <FaDiceOne />;\n      case 2:\n        return <FaDiceTwo />;\n      case 3:\n        return <FaDiceThree />;\n      case 4:\n        return <FaDiceFour />;\n      case 5:\n        return <FaDiceFive />;\n      case 6:\n        return <FaDiceSix />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <button style={buttonStyles} className=\"click\" onClick={rollDice}>\n        <RefreshIcon size={16} color=\"white\" /> Roll Dice\n      </button>\n      <div className=\"icon\">{renderDice(diceValue)}</div>\n    </>\n  );\n};\n\nexport default DiceRoll;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}